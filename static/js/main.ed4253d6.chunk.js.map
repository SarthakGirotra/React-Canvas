{"version":3,"sources":["App.js","index.js"],"names":["useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","App","classes","useState","email","phone","state","setState","order","id","draggable","element","TextField","variant","required","fullWidth","label","name","autoComplete","type","Typography","align","drag","setDrag","handleDrop","ev","currentTarget","dragBox","find","box","dragId","dropBox","dragBoxOrder","dropBoxOrder","newDragState","map","setDragId","handleDrag","handleChange","event","target","checked","Container","component","maxWidth","CssBaseline","className","Avatar","FormGroup","row","FormControlLabel","control","Checkbox","onChange","color","noValidate","sort","a","b","item","style","d","onDragOver","e","preventDefault","onDragStart","onDrop","Button","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ed4253d6.chunk.js","sourcesContent":["\nimport './App.css';\nimport React, { useState } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport FormGroup from '@material-ui/core/FormGroup';\n\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\n\nexport default function App() {\n  const classes = useStyles();\n\n  const [state, setState] = useState({\n    email: true,\n    phone: false,\n\n  });\n  const [drag, setDrag] = useState([\n    {\n\n      order: 1,\n      id: \"email\",\n      draggable: true,\n\n      element: (<> <TextField\n        variant=\"outlined\"\n        margin=\"normal\"\n        required\n        fullWidth\n        id=\"email\"\n        label=\"Email Address\"\n        name=\"email\"\n        autoComplete=\"email\"\n      />\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          name=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          id=\"password\"\n          autoComplete=\"current-password\"\n        /></>),\n    },\n    { order: 2, id: \"or\", draggable: false, element: (<Typography align=\"center\" >Or</Typography>) }\n    ,\n    {\n      order: 3,\n      id: \"phone\",\n      draggable: true,\n\n      element: (<TextField\n        variant=\"outlined\"\n        margin=\"normal\"\n        required\n        fullWidth\n        id=\"phone\"\n        label=\"Phone number\"\n        name=\"phone\"\n        autoComplete=\"phone\"\n      />)\n    }\n\n\n\n  ]);\n  const handleDrop = (ev) => {\n    if (ev.currentTarget.id !== \"or\") {\n      const dragBox = drag.find((box) => box.id === dragId);\n      const dropBox = drag.find((box) => box.id === ev.currentTarget.id);\n\n      const dragBoxOrder = dragBox.order;\n      const dropBoxOrder = dropBox.order;\n\n      const newDragState = drag.map((box) => {\n        if (box.id === dragId) {\n          box.order = dropBoxOrder;\n        }\n        if (box.id === ev.currentTarget.id) {\n          box.order = dragBoxOrder;\n        }\n        return box;\n      });\n\n      setDrag(newDragState)\n    }\n\n\n  }\n  const [dragId, setDragId] = useState();\n\n  const handleDrag = (ev) => {\n    setDragId(ev.currentTarget.id);\n\n  };\n  const handleChange = (event) => {\n    setState({ ...state, [event.target.name]: event.target.checked });\n\n\n  }\n  const handleDisplay = (d) => {\n    let display = false;\n    if (d === \"email\")\n      display = state.email\n    else if (d === \"phone\")\n      display = state.phone\n    else\n      display = state.email && state.phone\n\n    return display ? \"block\" : \"none\"\n  }\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n\n        <FormGroup row>\n\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={state.email}\n                onChange={handleChange}\n                name=\"email\"\n                color=\"primary\"\n              />\n            }\n            label=\"Email\"\n          />\n          <FormControlLabel\n            control={<Checkbox checked={state.phone} onChange={handleChange} name=\"phone\" />}\n            label=\"Phone\"\n          />\n        </FormGroup>\n        <form className={classes.form} noValidate>\n\n\n          {drag\n            .sort((a, b) => a.order - b.order)\n            .map((item) => (\n              <div\n                className={item.id === \"or\" ? \"or\" : state.email && state.phone ? \"div\" : \"\"}\n                draggable={item.draggable}\n                id={item.id}\n                style={{ display: handleDisplay(item.id) }}\n                onDragOver={(e) => e.preventDefault()}\n                onDragStart={handleDrag}\n                onDrop={handleDrop}\n                key={item.id}\n              >{item.element}</div>\n            ))}\n\n          {state.email || state.phone ? (<Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign In\n          </Button>) : null}\n\n\n\n        </form>\n      </div>\n\n    </Container>\n  );\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}